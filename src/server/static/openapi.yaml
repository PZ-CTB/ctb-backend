openapi: 3.0.0
info:
  title: CTB Backend API
  version: 1.0.1
servers:
  - url: https://ctb-backend.onrender.com
  - url: https://ctb-backend-pr-{id}.onrender.com
    variables:
      id:
        default: '0'
tags:
  - name: auth
    description: Authentication and user management
  - name: stock
    description: Stock market data and stock price prediction
  - name: wallet
    description: User's wallet management [Beta]
paths:
  /api/v1/auth/register:
    post:
      tags:
        - auth
      summary: Register
      description: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '201':
          description: Successful operation
        '202':
          description: User with given name already exists
        '400':
          description: Invalid json format
        '500':
          description: Internal server error
  /api/v1/auth/login:
    post:
      tags:
        - auth
      summary: Login
      description: Login user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: Invalid json format
        '401':
          description: Unauthorized
        '403':
          description: Unauthorized - wrong password
        '500':
          description: Internal server error
  /api/v1/auth/me:
    get:
      tags:
        - auth
      summary: Me
      description: Get user's information
      parameters:
        - in: header
          name: x-access-token
          schema:
            type: string
          required: true
          description: JWT access token
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Me'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
      security:
        - JWT: []
  /api/v1/auth/logout:
    post:
      tags:
        - auth
      summary: Logout
      description: Logout user
      parameters:
        - in: header
          name: x-access-token
          schema:
            type: string
          required: true
          description: JWT access token
      responses:
        '201':
          description: Successful operation
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
      security:
        - JWT: []
  /api/v1/auth/refresh:
    post:
      tags:
        - auth
      summary: Refresh
      description: Refresh JWT access token.
      parameters:
        - in: header
          name: x-access-token
          schema:
            type: string
          required: true
          description: JWT access token
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
      security:
        - JWT: []
  /api/v1/auth/change_password:
    get:
      tags:
        - auth
      summary: Change password [Beta]
      description: Change user's password [Beta]
      responses:
        '200':
          description: Successful operation
  /api/v1/stock/chart:
    get:
      tags:
        - stock
      summary: Chart
      description: Get historical stock prices
      parameters:
        - in: query
          name: from
          schema:
            type: string
          required: true
          description: Start date of returned range in YYYY-MM-DD format
        - in: query
          name: to
          schema:
            type: string
          required: true
          description: End date of returned range in YYYY-MM-DD format
        - in: query
          name: aggregate
          schema:
            type: integer
          required: false
          description: Number of days to aggregate data (default is 1)
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Price'
        '400':
          description: Mandatory arguments weren't provided
  /api/v1/stock/future_value:
    get:
      tags:
        - stock
      summary: Future value [Beta]
      description: Get future stock prices predicted by model, not implemented yet [Beta]
      responses:
        '200':
          description: Successful operation
  /api/v1/wallet/balance:
    get:
      tags:
        - wallet
      summary: Account balance
      description: Get user's account balance
      parameters:
        - in: header
          name: x-access-token
          schema:
            type: string
          required: true
          description: JWT access token
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
      security:
       - JWT: []
  /api/v1/wallet/deposit:
    post:
      tags:
        - wallet
      summary: Deposit
      description: Deposit cash in USD
      parameters:
        - in: header
          name: x-access-token
          schema:
            type: string
          required: true
          description: JWT access token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cash'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid json format
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
      security:
       - JWT: []
  /api/v1/wallet/withdraw:
    post:
      tags:
        - wallet
      summary: Withdraw
      description: Withdraw cash in USD
      parameters:
        - in: header
          name: x-access-token
          schema:
            type: string
          required: true
          description: JWT access token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cash'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid json format
        '401':
          description: Unauthorized
        '409':
          description: Invalid amount
        '500':
          description: Internal server error
      security:
        - JWT: []
  /api/v1/wallet/buy:
    post:
      tags:
        - wallet
      summary: Buy
      description: Buy BTC cryptocurrency
      parameters:
        - in: header
          name: x-access-token
          schema:
            type: string
          required: true
          description: JWT access token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cash'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid json format
        '401':
          description: Unauthorized
        '409':
          description: Invalid amount
        '500':
          description: Internal server error
      security:
        - JWT: []
  /api/v1/wallet/sell:
    post:
      tags:
        - wallet
      summary: Sell
      description: Sell BTC cryptocurrency
      parameters:
        - in: header
          name: x-access-token
          schema:
            type: string
          required: true
          description: JWT access token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cash'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid json format
        '401':
          description: Unauthorized
        '409':
          description: Invalid amount
        '500':
          description: Internal server error
      security:
        - JWT: []
  /api/v1/wallet/history:
    get:
      tags:
        - wallet
      summary: Transaction history
      description: Get user's transaction history
      parameters:
        - in: header
          name: x-access-token
          schema:
            type: string
          required: true
          description: JWT access token
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transactions'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
      security:
       - JWT: []
components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          example: user@email.com
        password:
          type: string
          example: password
    Me:
      type: object
      properties:
        uuid:
          type: string
          example: user_uuid
        email:
          type: string
          example: user@email.com
        wallet_usd:
          type: number
          example: 0.1
        wallet_btc:
          type: number
          example: 0.1
    Token:
      type: object
      properties:
        auth_token:
          type: string
          example: token
    Balance:
      type: object
      properties:
        wallet_usd:
          type: number
          example: 0.1
        wallet_btc:
          type: number
          example: 0.1
    Cash:
      type: object
      properties:
        amount:
          type: number
          example: 0.1
    Price:
      type: object
      properties:
        date:
          type: string
          example: "2020-01-26"
        avg:
          type: number
          example: 7124.183768763751
        high:
          type: number
          example: 7124.183768763751
        low:
          type: number
          example: 7124.183768763751
      required:
        - date
        - avg
    Transactions:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    Transaction:
      type: object
      properties:
          timestamp:
            type: string
            example: "2020-01-26T15:04:05.000Z"
          transaction_type:
            type: string
            example: "deposit"
          amount_usd:
            type: number
            example: 0.1
          amount_btc:
            type: number
            example: 0.1
          total_usd_after_transaction:
            type: number
            example: 7124.1
          total_btc_after_transaction:
            type: number
            example: 7124.1
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
