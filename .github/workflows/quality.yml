name: Quality

on: [pull_request]

jobs:
  pylint:
    name: Code check - pylint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/server/requirements.txt
        pip install pylint
    - name: Run pylint
      run: |
        pylint --output-format=colorized $(git ls-files '*.py')
  mypy:
    name: Code check - mypy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mypy
        python3 -m pip install types-requests
    - name: Run mypy
      run: |
        mypy --config-file pyproject.toml .
  pydocstyle:
    name: Docstrings check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pydocstyle
    - name: Run pydocstyle
      run: |
        pydocstyle --config pyproject.toml --count
  isort:
    name: Imports check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install isort[colors]
    - name: Run isort
      run: |
        isort --settings-file pyproject.toml --check --diff --color .
  black:
    name: Format check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black
    - name: Run black
      run: |
        black --config pyproject.toml --check --diff --color .
  openapi:
    name: Swagger OpenAPI validation
    runs-on: ubuntu-latest
    services:
      swagger-editor:
        image: swaggerapi/swagger-editor
        ports:
          - 80:8080
    steps:
      - uses: actions/checkout@v3
      - name: Validate OpenAPI YAML file
        uses: char0n/swagger-editor-validate@v1
        with:
          swagger-editor-url: http://localhost/
          definition-file: src/server/static/openapi.yaml
